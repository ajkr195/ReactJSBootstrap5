{"version":3,"sources":["logo.svg","services/UserService.js","components/UserComponent.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","UserComponent","props","state","users","UserService","getUsers","then","response","setState","data","className","this","map","user","id","username","useremail","userfirstname","userlastname","useraddress","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAAe,I,oDCWA,M,wFALX,WACI,OAAOA,IAAMC,IALL,uC,aC2DDC,E,kDAvDX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,MAAM,IAHI,E,qDAOlB,WAAoB,IAAD,OACfC,EAAYC,WAAWC,MAAK,SAACC,GACzB,EAAKC,SAAS,CAAEL,MAAOI,EAASE,Y,oBAIxC,WACI,OACI,sBAAMC,UAAY,wBAAlB,UACI,6CACA,wBAAOA,UAAY,+BAAnB,UACI,gCACI,+BAEI,0CACA,gDACA,gDACA,kDACA,iDACA,oDAKR,gCAEQC,KAAKT,MAAMC,MAAMS,KACb,SAAAC,GAAI,OACJ,+BACK,mCAAMA,EAAKC,MACX,mCAAMD,EAAKE,YACX,mCAAMF,EAAKG,aACX,mCAAMH,EAAKI,iBACX,mCAAMJ,EAAKK,gBACX,mCAAML,EAAKM,iBANLN,EAAKC,mB,GArCpBM,IAAMC,W,MCOnBC,MANf,WACE,OACM,cAAC,EAAD,KCKOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3e3940c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios'\n\nconst API_URL = 'http://localhost:8080/api/users';\n\nclass UserService {\n\n    getUsers(){\n        return axios.get(API_URL);\n    }\n}\n\nexport default new UserService();","import React from 'react';\nimport UserService from '../services/UserService';\n\n\nclass UserComponent extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            users:[]\n        }\n    }\n\n    componentDidMount(){\n        UserService.getUsers().then((response) => {\n            this.setState({ users: response.data})\n        });\n    }\n\n    render (){\n        return (\n            <div  className = \"container text-center\">\n                <h1> Users List</h1>\n                <table className = \"table table-sm table-striped\">\n                    <thead>\n                        <tr>\n\n                            <th> User Id</th>\n                            <th> User UserName</th>\n                            <th> User Email Id</th>\n                            <th> User First Name</th>\n                            <th> User Last Name</th>\n                            <th> User Address</th>\n                           \n                        </tr>\n\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.users.map(\n                                user => \n                                <tr key = {user.id}>\n                                     <td> {user.id}</td>   \n                                     <td> {user.username}</td>   \n                                     <td> {user.useremail}</td>   \n                                     <td> {user.userfirstname}</td>   \n                                     <td> {user.userlastname}</td>  \n                                     <td> {user.useraddress}</td>   \n                                </tr>\n                            )\n                        }\n\n                    </tbody>\n                </table>\n\n            </div>\n\n        )\n    }\n}\n\nexport default UserComponent","import logo from './logo.svg';\nimport './App.css';\nimport UserComponent from './components/UserComponent';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n  return (\n        <UserComponent />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}